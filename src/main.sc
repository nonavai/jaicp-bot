theme: /

init:
    script:
        if (!$global.bookings) {
            $global.bookings = []
        }
        if (!$global.bookingCounter) {
            $global.bookingCounter = 1000
        }

state: greeting
    q: q:greeting
    a: –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–≤—Ç–æ—Å–µ—Ä–≤–∏—Å –ê–≤—Ç–æ–ü—Ä–æ—Ñ–∏! –Ø –ø–æ–º–æ–≥—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ç–µ—Ö–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ.
    script:
        $session.bookingData = {}

state: farewell
    q: q:farewell
    a: –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ! –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!

state: working_hours
    q: q:working_hours
    a: –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã –∞–≤—Ç–æ—Å–µ—Ä–≤–∏—Å–∞ –ê–≤—Ç–æ–ü—Ä–æ—Ñ–∏: –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫-–ü—è—Ç–Ω–∏—Ü–∞ 8:00-20:00, –°—É–±–±–æ—Ç–∞ 9:00-18:00. –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ - –≤—ã—Ö–æ–¥–Ω–æ–π.

state: price_inquiry
    q: q:price_inquiry
    a: –¶–µ–Ω—ã –Ω–∞ —Ç–µ—Ö–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ: –ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –æ—Ç 2500—Ä—É–±, –°—Ä–µ–¥–Ω–µ—Ä–∞–∑–º–µ—Ä–Ω—ã–µ –æ—Ç 3500—Ä—É–±, –ü–æ–ª–Ω–æ—Ä–∞–∑–º–µ—Ä–Ω—ã–µ –æ—Ç 4500—Ä—É–±.

state: service_booking
    q: q:service_booking
    script:
        var name = $parseTree._name
        var phone = $parseTree._phone  
        var brand = $parseTree._brand
        
        if (name) {
            name = normalizeName(name)
            $session.bookingData.name = name
        }
        if (phone) {
            phone = normalizePhone(phone)
            $session.bookingData.phone = phone
        }
        if (brand) {
            brand = normalizeCarBrand(brand)
            $session.bookingData.brand = brand
        }
        
        var params = 0
        if ($session.bookingData.name) params++
        if ($session.bookingData.phone) params++
        if ($session.bookingData.brand) params++
        
        if (params >= 2) {
            $reactions.transition("confirm_booking")
        } else {
            if (!$session.bookingData.name) {
                $reactions.transition("ask_name")
            } else if (!$session.bookingData.phone) {
                $reactions.transition("ask_phone")
            } else if (!$session.bookingData.brand) {
                $reactions.transition("ask_car_brand")
            }
        }

state: ask_name
    q: * @FullName *
    a: –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?
    script:
        if ($parseTree._name) {
            $session.bookingData.name = normalizeName($parseTree._name)
            if ($session.bookingData.phone && $session.bookingData.brand) {
                $reactions.transition("confirm_booking")
            } else if (!$session.bookingData.phone) {
                $reactions.transition("ask_phone")
            } else {
                $reactions.transition("ask_car_brand")
            }
        }

state: ask_phone
    q: * @Phone *
    a: –£–∫–∞–∂–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    script:
        if ($parseTree._phone) {
            $session.bookingData.phone = normalizePhone($parseTree._phone)
            if ($session.bookingData.name && $session.bookingData.brand) {
                $reactions.transition("confirm_booking")
            } else if (!$session.bookingData.name) {
                $reactions.transition("ask_name")
            } else {
                $reactions.transition("ask_car_brand")
            }
        }

state: ask_car_brand
    q: * @CarBrand *
    a: –ö–∞–∫–∞—è –º–∞—Ä–∫–∞ –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è?
    script:
        if ($parseTree._brand) {
            $session.bookingData.brand = normalizeCarBrand($parseTree._brand)
            if ($session.bookingData.name && $session.bookingData.phone) {
                $reactions.transition("confirm_booking")
            } else if (!$session.bookingData.name) {
                $reactions.transition("ask_name")
            } else {
                $reactions.transition("ask_phone")
            }
        }

state: confirm_booking
    a: –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —Ç–µ—Ö–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ:\nüìù –ò–º—è: {{ $session.bookingData.name }}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: {{ $session.bookingData.phone }}\nüöó –ê–≤—Ç–æ–º–æ–±–∏–ª—å: {{ $session.bookingData.brand }}\n\n–í—Å–µ –≤–µ—Ä–Ω–æ? (–¥–∞/–Ω–µ—Ç)

state: process_confirmation
    q: * @Confirmation *
    script:
        var bookingId = "BK" + (++$global.bookingCounter)
        
        var booking = {
            id: bookingId,
            userId: $session.userId || "anonymous",
            name: $session.bookingData.name,
            phone: $session.bookingData.phone,
            brand: $session.bookingData.brand,
            status: "New",
            createdAt: new Date().toISOString(),
            confirmedAt: new Date().toISOString()
        }
        
        var validation = validateBookingData(booking)
        if (!validation.isValid) {
            $reactions.answer("–û—à–∏–±–∫–∞ –≤ –¥–∞–Ω–Ω—ã—Ö: " + validation.errors.join(", "))
            return
        }
        
        $global.bookings.push(booking)
        $session.lastBookingId = bookingId
        
        $reactions.answer("‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞!\nüìã –ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: " + bookingId + "\n‚è∞ –ù–∞—à —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏.")

state: process_negation
    q: * @Negation *
    a: –•–æ—Ä–æ—à–æ, –¥–∞–≤–∞–π—Ç–µ —É—Ç–æ—á–Ω–∏–º –¥–∞–Ω–Ω—ã–µ. –ß—Ç–æ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å?
    script:
        $session.bookingData = {}
        $reactions.transition("service_booking")

state: view_bookings
    q: * (–º–æ–∏ –∑–∞—è–≤–∫–∏|–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞—è–≤–∫–∏|—Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏|–º–æ–∏ –∑–∞–ø–∏—Å–∏) *
    script:
        var userId = $session.userId || "anonymous"
        var userBookings = []
        
        for (var i = 0; i < $global.bookings.length; i++) {
            if ($global.bookings[i].userId === userId) {
                userBookings.push($global.bookings[i])
            }
        }
        
        if (userBookings.length === 0) {
            $reactions.answer("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫.")
        } else {
            var message = "üìã –í–∞—à–∏ –∑–∞—è–≤–∫–∏:\n\n"
            for (var j = 0; j < userBookings.length; j++) {
                var booking = userBookings[j]
                message += "üÜî " + booking.id + "\n"
                message += "üöó " + booking.brand + "\n"
                message += "üìä –°—Ç–∞—Ç—É—Å: " + booking.status + "\n"
                message += "üìÖ –°–æ–∑–¥–∞–Ω–æ: " + formatDate(booking.createdAt) + "\n\n"
            }
            $reactions.answer(message)
        }

state: default
    a: –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å. –Ø –º–æ–≥—É:\n‚Ä¢ üìù –ó–∞–ø–∏—Å–∞—Ç—å –Ω–∞ —Ç–µ—Ö–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ\n‚Ä¢ üìã –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à–∏ –∑–∞—è–≤–∫–∏\n‚Ä¢ ‚è∞ –†–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —á–∞—Å–∞—Ö —Ä–∞–±–æ—Ç—ã\n‚Ä¢ üí∞ –°–æ–æ–±—â–∏—Ç—å —Ü–µ–Ω—ã

function normalizePhone(raw) {
    if (!raw) return raw
    
    var digits = raw.replace(/\D/g, '')
    
    if (digits.length === 10) return "+7" + digits
    if (digits.length === 11 && digits.charAt(0) === "8") return "+7" + digits.substring(1)
    if (digits.length === 11 && digits.charAt(0) === "7") return "+" + digits
    if (digits.length > 11) return "+" + digits
    
    return digits
}

function normalizeName(raw) {
    if (!raw) return raw
    
    var parts = raw.trim().split(/\s+/)
    for (var i = 0; i < parts.length; i++) {
        var p = parts[i].toLowerCase()
        parts[i] = p.charAt(0).toUpperCase() + p.substring(1)
    }
    
    return parts.join(" ")
}

function normalizeCarBrand(raw) {
    if (!raw) return raw
    
    var brandMap = {
        "—à–∫–æ–¥–∞": "Skoda",
        "–ª–∞–¥–∞": "Lada", 
        "—Ç–æ–π–æ—Ç–∞": "Toyota",
        "–∫–∏–∞": "KIA",
        "—Ö–µ–Ω–¥–∞–π": "Hyundai",
        "—Ñ–æ–ª—å–∫—Å–≤–∞–≥–µ–Ω": "Volkswagen",
        "–±–º–≤": "BMW",
        "–º–µ—Ä—Å–µ–¥–µ—Å": "Mercedes",
        "–∞—É–¥–∏": "Audi",
        "—Ñ–æ—Ä–¥": "Ford",
        "—à–µ–≤—Ä–æ–ª–µ": "Chevrolet",
        "–Ω–∏—Å—Å–∞–Ω": "Nissan",
        "–º–∞–∑–¥–∞": "Mazda",
        "—Ö–æ–Ω–¥–∞": "Honda",
        "—Ä–µ–Ω–æ": "Renault",
        "–ø–µ–∂–æ": "Peugeot",
        "—Å–∏—Ç—Ä–æ–µ–Ω": "Citroen",
        "–æ–ø–µ–ª—å": "Opel",
        "–≤–æ–ª—å–≤–æ": "Volvo",
        "–ª–µ–∫—Å—É—Å": "Lexus",
        "–∏–Ω—Ñ–∏–Ω–∏—Ç–∏": "Infiniti",
        "–∞–∫—É—Ä–∞": "Acura",
        "—Å—É–±–∞—Ä—É": "Subaru",
        "–º–∏—Ü—É–±–∏—Å–∏": "Mitsubishi",
        "—Å—É–∑—É–∫–∏": "Suzuki"
    }
    
    var normalized = brandMap[raw.toLowerCase()]
    return normalized || raw.charAt(0).toUpperCase() + raw.substring(1).toLowerCase()
}

function validateBookingData(booking) {
    var errors = []
    
    if (!booking.name || booking.name.length < 2) {
        errors.push("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è")
    }
    
    if (!booking.phone || booking.phone.length < 10) {
        errors.push("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
    }
    
    if (!booking.brand || booking.brand.length < 2) {
        errors.push("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –º–∞—Ä–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è")
    }
    
    return {
        isValid: errors.length === 0,
        errors: errors
    }
}

function formatDate(isoString) {
    var date = new Date(isoString)
    return date.toLocaleDateString("ru-RU") + " " + date.toLocaleTimeString("ru-RU", {hour: '2-digit', minute:'2-digit'})
}